{"version":3,"file":"react-fb-image-video-grid.esm.js","sources":["../src/Library/Utilis/clsx.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/Library/Components/Carousel/index.tsx","../src/Library/Components/ImageGrid/index.tsx"],"sourcesContent":["export const clsx = (...classes: string[]) => {\n  return classes\n    .filter(Boolean)\n    .map((className) => className.trim())\n    .join(\" \");\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { clsx } from \"../../Utilis/clsx\";\nimport \"./styles.css\";\n\ntype CarauselType = {\n  images: JSX.Element[];\n  initialImageIndex: number;\n  isOpen: boolean;\n  onClose: any;\n};\n\nconst Carausel = ({\n  images,\n  initialImageIndex,\n  isOpen,\n  onClose,\n}: CarauselType) => {\n  const [currentImageIndex, setCurrentImageIndex] = React.useState(\n    initialImageIndex\n  );\n\n  const memoizedImages = React.useMemo(() => images, [images]);\n  const handleNext = React.useCallback(() => {\n    setCurrentImageIndex((prevImageIndex) =>\n      prevImageIndex === memoizedImages.length - 1 ? 0 : prevImageIndex + 1\n    );\n  }, [memoizedImages]);\n\n  const handlePrevious = React.useCallback(\n    () =>\n      setCurrentImageIndex((prevImgIndex) =>\n        prevImgIndex === 0 ? memoizedImages.length - 1 : prevImgIndex - 1\n      ),\n    [memoizedImages]\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", (key) => {\n      if (key.key === \"ArrowRight\") {\n        handleNext();\n      } else if (key.key === \"ArrowLeft\") {\n        handlePrevious();\n      }\n    });\n\n    return () => {\n      document.removeEventListener(\"keydown\", (key) => {\n        if (key.key === \"ArrowRight\") {\n          handleNext();\n        } else if (key.key === \"ArrowLeft\") {\n          handlePrevious();\n        }\n      });\n    };\n  }, [handleNext, handlePrevious]);\n\n  const currentImage = images[currentImageIndex];\n\n  return (\n    <Modal\n      ariaHideApp={false}\n      isOpen={isOpen}\n      onRequestClose={onClose}\n      contentLabel=\"Example Modal\"\n    >\n      <div className={\"layout\"}>\n        <svg\n          onClick={onClose}\n          className={clsx(\"close_icon\", \"icon\")}\n          fill=\"#000000\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"24px\"\n          height=\"24px\"\n        >\n          <path d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\" />\n        </svg>\n        <div className={\"modal_wrap\"}>\n          <svg\n            className={clsx(\"icon\", \"left_arrow\")}\n            onClick={handlePrevious}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\n          </svg>\n          {React.cloneElement(currentImage, {\n            className: clsx(\"img\", currentImage?.props?.className || \"\"),\n          })}\n\n          <svg\n            className={clsx(\"icon\")}\n            onClick={handleNext}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\n          </svg>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Carausel;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { clsx } from '../../Utilis/clsx';\nimport Carausel from '../Carousel';\nimport './styles.css';\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n  className?: string;\n  showModal?: boolean;\n  smart?: boolean;\n}\n\nconst ImageGrid = ({\n  children: elements,\n  showModal = true,\n  className = '',\n  smart = false,\n}: Props) => {\n  const [children, setChildren] = useState(elements);\n\n  const numberOfImages = Array.isArray(children) ? children.length : 1;\n\n  const [selectedImageIndex, setSelectedImageIndex] = React.useState<number>(0);\n  const [isOpenCarausel, setIsOpenCarausel] = React.useState(false);\n\n  const handleImageClick = (imageIndex: number) => {\n    setIsOpenCarausel(true);\n    return imageIndex;\n  };\n\n  const handleCloseCarausel = () => {\n    setSelectedImageIndex(0);\n    setIsOpenCarausel(false);\n  };\n  // const ref = useRef(new Array(numberOfImages).fill({}));\n  const [images, setImages] = useState<\n    Array<{ element: JSX.Element; dimensions: DOMRect }>\n  >([]);\n\n  useEffect(() => {\n    if (images.length === numberOfImages && smart) {\n      setChildren(\n        images\n          .filter((ele) => ele.element)\n          .sort(\n            (a, b) =>\n              Math.abs(a.dimensions.right - a.dimensions.left) -\n              Math.abs(b.dimensions.right - b.dimensions.left)\n          )\n          .map(({ element }) => element as unknown as JSX.Element)\n      );\n    }\n  }, [images]);\n\n  if (numberOfImages < 5) {\n    return (\n      <>\n        {smart &&\n          React.Children.map(children, (child) =>\n            React.cloneElement(child, {\n              ref: (element: HTMLElement) => {\n                if (images.length >= numberOfImages) return;\n                if (!element) return;\n                setImages((prev) => [\n                  ...prev,\n                  {\n                    element: child,\n                    dimensions: element?.getBoundingClientRect() || {},\n                  },\n                ]);\n              },\n              style: {\n                visibility: 'hidden',\n                position: 'absolute',\n              },\n            })\n          )}\n        {typeof showModal === 'boolean' && showModal && (\n          <Carausel\n            key={String(isOpenCarausel)}\n            isOpen={isOpenCarausel}\n            images={\n              numberOfImages === 1\n                ? [children as JSX.Element]\n                : (children as JSX.Element[])\n            }\n            initialImageIndex={selectedImageIndex}\n            onClose={handleCloseCarausel}\n          />\n        )}\n\n        <div\n          className={clsx(\n            'grid_wrapper',\n            `grid_wrapper_${numberOfImages}_img`,\n            className\n          )}\n        >\n          {React.Children.map(children, (child, i) => {\n            const imgCount = i + 1;\n            return React.cloneElement(child as ReactElement, {\n              ...child.props,\n              className: ` ${'img'} ${`img_${numberOfImages}_${imgCount}`} ${\n                child.props?.className || ''\n              }`,\n              onClick: () => {\n                child.props.onClick?.();\n                setSelectedImageIndex(handleImageClick(i));\n              },\n            });\n          })}\n        </div>\n      </>\n    );\n  } else {\n    const firstRow = (children as JSX.Element[]).filter((_, i) => i < 2);\n    const firstRowImgCount = firstRow.length;\n    const secondRow = (children as JSX.Element[]).filter(\n      (_, i) => i >= 2 && i <= 4\n    );\n    const secondRowImgCount = secondRow.length;\n\n    return (\n      <>\n        {smart &&\n          React.Children.map(children, (child) =>\n            React.cloneElement(child, {\n              ref: (element: HTMLElement) => {\n                if (images.length >= numberOfImages) return;\n                if (!element) return;\n                setImages((prev) => [\n                  ...prev,\n                  {\n                    element: child,\n                    dimensions: element?.getBoundingClientRect() || {},\n                  },\n                ]);\n              },\n              style: {\n                visibility: 'hidden',\n                position: 'absolute',\n              },\n            })\n          )}\n        {typeof showModal === 'boolean' && showModal && (\n          <Carausel\n            key={String(isOpenCarausel)}\n            isOpen={isOpenCarausel}\n            initialImageIndex={selectedImageIndex}\n            images={\n              numberOfImages === 1\n                ? [children as JSX.Element]\n                : (children as JSX.Element[])\n            }\n            onClose={handleCloseCarausel}\n          />\n        )}\n\n        <div className={clsx('sub_grid_wrapper', className)}>\n          <div\n            className={clsx(\n              'sub_grid_wrapper_first_row',\n              `grid_wrapper_${firstRow.length}_img`\n            )}\n          >\n            {React.Children.map(firstRow, (child, i) => {\n              const imgCount = i + 1;\n              return React.cloneElement(child as ReactElement, {\n                ...child.props,\n                className: ` ${'img'} ${`img_${firstRowImgCount}_${imgCount}`} ${\n                  child.props?.className || ''\n                }`,\n                onClick: () => {\n                  child.props.onClick?.();\n                  setSelectedImageIndex(handleImageClick(i));\n                },\n              });\n            })}\n          </div>\n          <div\n            className={clsx(\n              'sub_grid_wrapper_second_row',\n              `sub_grid_wrapper_${secondRow.length}_img`\n            )}\n          >\n            {React.Children.map(secondRow, (child, i) => {\n              const imgCount = i + 1;\n\n              if (numberOfImages > 5 && imgCount === 3) {\n                return (\n                  <div\n                    className={clsx(\n                      'img',\n                      `sub_img_${secondRowImgCount}_${imgCount}`,\n                      child.props?.className || '',\n                      'show_more_img'\n                    )}\n                    onClick={() => setSelectedImageIndex(handleImageClick(0))}\n                  >\n                    {React.cloneElement(child as ReactElement, {\n                      ...child.props,\n                      className: ` ${'img'} ${`sub_img_${secondRowImgCount}_${imgCount}`} ${\n                        child.props?.className || ''\n                      }`,\n                      onClick: () => {\n                        child.props.onClick?.();\n                        setSelectedImageIndex(handleImageClick(i + 2));\n                      },\n                    })}\n                    <div className={'show_more_text'}>\n                      {' '}\n                      + {numberOfImages - 5}{' '}\n                    </div>\n                  </div>\n                );\n              }\n\n              return React.cloneElement(child as ReactElement, {\n                ...child.props,\n                className: ` ${'img'} ${`sub_img_${secondRowImgCount}_${imgCount}`} ${\n                  child.props?.className || ''\n                }`,\n                onClick: () => {\n                  child.props.onClick?.();\n                  setSelectedImageIndex(handleImageClick(i + 2));\n                },\n              });\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default ImageGrid;\n"],"names":["clsx","classes","filter","Boolean","map","className","trim","join","Carausel","images","initialImageIndex","isOpen","onClose","React","useState","currentImageIndex","setCurrentImageIndex","memoizedImages","useMemo","handleNext","useCallback","prevImageIndex","length","handlePrevious","prevImgIndex","useEffect","document","addEventListener","key","removeEventListener","currentImage","Modal","ariaHideApp","onRequestClose","contentLabel","onClick","fill","xmlns","viewBox","width","height","d","cloneElement","props","ImageGrid","elements","children","showModal","smart","setChildren","numberOfImages","Array","isArray","selectedImageIndex","setSelectedImageIndex","isOpenCarausel","setIsOpenCarausel","handleImageClick","imageIndex","handleCloseCarausel","setImages","ele","element","sort","a","b","Math","abs","dimensions","right","left","Children","child","ref","prev","getBoundingClientRect","style","visibility","position","String","i","imgCount","firstRow","_","firstRowImgCount","secondRow","secondRowImgCount"],"mappings":"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"}