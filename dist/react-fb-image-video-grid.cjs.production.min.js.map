{"version":3,"file":"react-fb-image-video-grid.cjs.production.min.js","sources":["../src/Library/Utilis/clsx.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/Library/Components/Carousel/index.tsx","../src/Library/Components/ImageGrid/index.tsx"],"sourcesContent":["export const clsx = (...classes: string[]) => {\n  return classes\n    .filter(Boolean)\n    .map((className) => className.trim())\n    .join(\" \");\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { clsx } from \"../../Utilis/clsx\";\nimport \"./styles.css\";\n\ntype CarauselType = {\n  images: JSX.Element[];\n  initialImageIndex: number;\n  isOpen: boolean;\n  onClose: any;\n};\n\nconst Carausel = ({\n  images,\n  initialImageIndex,\n  isOpen,\n  onClose,\n}: CarauselType) => {\n  const [currentImageIndex, setCurrentImageIndex] = React.useState(\n    initialImageIndex\n  );\n\n  const memoizedImages = React.useMemo(() => images, [images]);\n  const handleNext = React.useCallback(() => {\n    setCurrentImageIndex((prevImageIndex) =>\n      prevImageIndex === memoizedImages.length - 1 ? 0 : prevImageIndex + 1\n    );\n  }, [memoizedImages]);\n\n  const handlePrevious = React.useCallback(\n    () =>\n      setCurrentImageIndex((prevImgIndex) =>\n        prevImgIndex === 0 ? memoizedImages.length - 1 : prevImgIndex - 1\n      ),\n    [memoizedImages]\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", (key) => {\n      if (key.key === \"ArrowRight\") {\n        handleNext();\n      } else if (key.key === \"ArrowLeft\") {\n        handlePrevious();\n      }\n    });\n\n    return () => {\n      document.removeEventListener(\"keydown\", (key) => {\n        if (key.key === \"ArrowRight\") {\n          handleNext();\n        } else if (key.key === \"ArrowLeft\") {\n          handlePrevious();\n        }\n      });\n    };\n  }, [handleNext, handlePrevious]);\n\n  const currentImage = images[currentImageIndex];\n\n  return (\n    <Modal\n      ariaHideApp={false}\n      isOpen={isOpen}\n      onRequestClose={onClose}\n      contentLabel=\"Example Modal\"\n    >\n      <div className={\"layout\"}>\n        <svg\n          onClick={onClose}\n          className={clsx(\"close_icon\", \"icon\")}\n          fill=\"#000000\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"24px\"\n          height=\"24px\"\n        >\n          <path d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\" />\n        </svg>\n        <div className={\"modal_wrap\"}>\n          <svg\n            className={clsx(\"icon\", \"left_arrow\")}\n            onClick={handlePrevious}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\n          </svg>\n          {React.cloneElement(currentImage, {\n            className: clsx(\"img\", currentImage?.props?.className || \"\"),\n          })}\n\n          <svg\n            className={clsx(\"icon\")}\n            onClick={handleNext}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n          >\n            <path d=\"M7.293 4.707 14.586 12l-7.293 7.293 1.414 1.414L17.414 12 8.707 3.293 7.293 4.707z\" />\n          </svg>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Carausel;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { clsx } from '../../Utilis/clsx';\nimport Carausel from '../Carousel';\nimport './styles.css';\n\ninterface Props {\n  children: JSX.Element | JSX.Element[];\n  className?: string;\n  showModal?: boolean;\n  smart?: boolean;\n}\n\nconst ImageGrid = ({\n  children: elements,\n  showModal = true,\n  className = '',\n  smart = false,\n}: Props) => {\n  const [children, setChildren] = useState(elements);\n\n  const numberOfImages = Array.isArray(children) ? children.length : 1;\n\n  const [selectedImageIndex, setSelectedImageIndex] = React.useState<number>(0);\n  const [isOpenCarausel, setIsOpenCarausel] = React.useState(false);\n\n  const handleImageClick = (imageIndex: number) => {\n    setIsOpenCarausel(true);\n    return imageIndex;\n  };\n\n  const handleCloseCarausel = () => {\n    setSelectedImageIndex(0);\n    setIsOpenCarausel(false);\n  };\n  // const ref = useRef(new Array(numberOfImages).fill({}));\n  const [images, setImages] = useState<\n    Array<{ element: JSX.Element; dimensions: DOMRect }>\n  >([]);\n\n  useEffect(() => {\n    if (images.length === numberOfImages && smart) {\n      setChildren(\n        images\n          .filter((ele) => ele.element)\n          .sort(\n            (a, b) =>\n              Math.abs(a.dimensions.right - a.dimensions.left) -\n              Math.abs(b.dimensions.right - b.dimensions.left)\n          )\n          .map(({ element }) => element as unknown as JSX.Element)\n      );\n    }\n  }, [images]);\n\n  if (numberOfImages < 5) {\n    return (\n      <>\n        {smart &&\n          React.Children.map(children, (child) =>\n            React.cloneElement(child, {\n              ref: (element: HTMLElement) => {\n                if (images.length >= numberOfImages) return;\n                if (!element) return;\n                setImages((prev) => [\n                  ...prev,\n                  {\n                    element: child,\n                    dimensions: element?.getBoundingClientRect() || {},\n                  },\n                ]);\n              },\n              style: {\n                visibility: 'hidden',\n                position: 'absolute',\n              },\n            })\n          )}\n        {typeof showModal === 'boolean' && showModal && (\n          <Carausel\n            key={String(isOpenCarausel)}\n            isOpen={isOpenCarausel}\n            images={\n              numberOfImages === 1\n                ? [children as JSX.Element]\n                : (children as JSX.Element[])\n            }\n            initialImageIndex={selectedImageIndex}\n            onClose={handleCloseCarausel}\n          />\n        )}\n\n        <div\n          className={clsx(\n            'grid_wrapper',\n            `grid_wrapper_${numberOfImages}_img`,\n            className\n          )}\n        >\n          {React.Children.map(children, (child, i) => {\n            const imgCount = i + 1;\n            return React.cloneElement(child as ReactElement, {\n              ...child.props,\n              className: ` ${'img'} ${`img_${numberOfImages}_${imgCount}`} ${\n                child.props?.className || ''\n              }`,\n              onClick: () => {\n                child.props.onClick?.();\n                setSelectedImageIndex(handleImageClick(i));\n              },\n            });\n          })}\n        </div>\n      </>\n    );\n  } else {\n    const firstRow = (children as JSX.Element[]).filter((_, i) => i < 2);\n    const firstRowImgCount = firstRow.length;\n    const secondRow = (children as JSX.Element[]).filter(\n      (_, i) => i >= 2 && i <= 4\n    );\n    const secondRowImgCount = secondRow.length;\n\n    return (\n      <>\n        {smart &&\n          React.Children.map(children, (child) =>\n            React.cloneElement(child, {\n              ref: (element: HTMLElement) => {\n                if (images.length >= numberOfImages) return;\n                if (!element) return;\n                setImages((prev) => [\n                  ...prev,\n                  {\n                    element: child,\n                    dimensions: element?.getBoundingClientRect() || {},\n                  },\n                ]);\n              },\n              style: {\n                visibility: 'hidden',\n                position: 'absolute',\n              },\n            })\n          )}\n        {typeof showModal === 'boolean' && showModal && (\n          <Carausel\n            key={String(isOpenCarausel)}\n            isOpen={isOpenCarausel}\n            initialImageIndex={selectedImageIndex}\n            images={\n              numberOfImages === 1\n                ? [children as JSX.Element]\n                : (children as JSX.Element[])\n            }\n            onClose={handleCloseCarausel}\n          />\n        )}\n\n        <div className={clsx('sub_grid_wrapper', className)}>\n          <div\n            className={clsx(\n              'sub_grid_wrapper_first_row',\n              `grid_wrapper_${firstRow.length}_img`\n            )}\n          >\n            {React.Children.map(firstRow, (child, i) => {\n              const imgCount = i + 1;\n              return React.cloneElement(child as ReactElement, {\n                ...child.props,\n                className: ` ${'img'} ${`img_${firstRowImgCount}_${imgCount}`} ${\n                  child.props?.className || ''\n                }`,\n                onClick: () => {\n                  child.props.onClick?.();\n                  setSelectedImageIndex(handleImageClick(i));\n                },\n              });\n            })}\n          </div>\n          <div\n            className={clsx(\n              'sub_grid_wrapper_second_row',\n              `sub_grid_wrapper_${secondRow.length}_img`\n            )}\n          >\n            {React.Children.map(secondRow, (child, i) => {\n              const imgCount = i + 1;\n\n              if (numberOfImages > 5 && imgCount === 3) {\n                return (\n                  <div\n                    className={clsx(\n                      'img',\n                      `sub_img_${secondRowImgCount}_${imgCount}`,\n                      child.props?.className || '',\n                      'show_more_img'\n                    )}\n                    onClick={() => setSelectedImageIndex(handleImageClick(0))}\n                  >\n                    {React.cloneElement(child as ReactElement, {\n                      ...child.props,\n                      className: ` ${'img'} ${`sub_img_${secondRowImgCount}_${imgCount}`} ${\n                        child.props?.className || ''\n                      }`,\n                      onClick: () => {\n                        child.props.onClick?.();\n                        setSelectedImageIndex(handleImageClick(i + 2));\n                      },\n                    })}\n                    <div className={'show_more_text'}>\n                      {' '}\n                      + {numberOfImages - 5}{' '}\n                    </div>\n                  </div>\n                );\n              }\n\n              return React.cloneElement(child as ReactElement, {\n                ...child.props,\n                className: ` ${'img'} ${`sub_img_${secondRowImgCount}_${imgCount}`} ${\n                  child.props?.className || ''\n                }`,\n                onClick: () => {\n                  child.props.onClick?.();\n                  setSelectedImageIndex(handleImageClick(i + 2));\n                },\n              });\n            })}\n          </div>\n        </div>\n      </>\n    );\n  }\n};\n\nexport default ImageGrid;\n"],"names":["clsx","classes","filter","Boolean","map","className","trim","join","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Carausel","images","isOpen","onClose","React","useState","initialImageIndex","currentImageIndex","setCurrentImageIndex","memoizedImages","useMemo","handleNext","useCallback","prevImageIndex","length","handlePrevious","prevImgIndex","useEffect","addEventListener","key","removeEventListener","currentImage","Modal","ariaHideApp","onRequestClose","contentLabel","onClick","fill","xmlns","viewBox","width","height","d","cloneElement","props","showModal","smart","children","setChildren","numberOfImages","Array","isArray","selectedImageIndex","setSelectedImageIndex","isOpenCarausel","setIsOpenCarausel","handleImageClick","imageIndex","handleCloseCarausel","setImages","ele","element","sort","a","b","Math","abs","dimensions","right","left","Children","child","prev","getBoundingClientRect","visibility","position","String","i","firstRow","_","firstRowImgCount","secondRow","secondRowImgCount","imgCount"],"mappings":"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"}